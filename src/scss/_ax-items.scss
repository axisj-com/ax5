@mixin item-variant($name, $base-color, $background, $color) {
	.ax-item {
		&.#{$name} {
			color: $color;
			background-color: $background;
			border-color: $background;
		}
	}

	a.ax-item {
		&.#{$name} {
			color: $color;

			.list-group-item-heading {
				color: inherit;
			}

			&:hover,
			&:focus {
				color: #fff;
				background-color: $base-color;
			}
			&.active,
			&.active:hover,
			&.active:focus {
				color: #fff;
				background-color: $base-color;
				border-color: $base-color;
			}
		}
	}
}

// mixins --------------------------------------------- end

.ax-item-group{
	padding: 0px;
	.ax-item{
		@include ax();
		position: relative;
		display: block;
		padding: 10px 15px;
		// Place the border on the list items and negative margin up for better styling
		margin-bottom: -1px;
		background-color: $item-group-bg;
		border: 1px solid $item-group-border;

		// Round the first and last items
		&:first-child {
			@include ax-border-radius($item-group-border-radius, "top");
			//@include border-bottom-radius(0);
		}
		&:last-child {
			margin-bottom: 0;
			@include ax-border-radius($item-group-border-radius, "bottom");
			//@include border-top-radius(0);
		}
	}
	a.ax-item{
		color: $item-group-link-color;
		/* item안에 타이틀과 내용을 추가할 때 필요
		.ax-item-heading {
			color: $list-group-link-heading-color;
		}
		*/
		// Hover state
		&:hover,
		&:focus {
			text-decoration: none;
			color: $item-group-link-hover-color;
			background-color: $item-group-hover-bg;
		}
	}

	.ax-item{
		// Disabled state
		&.disabled,
		&.disabled:hover,
		&.disabled:focus {
			background-color: $item-group-disabled-bg;
			color: $item-group-disabled-color;
			cursor: not-allowed;

			// Force color to inherit for custom content
			.ax-item-heading {
				color: inherit;
			}
			.ax-item-text {
				color: $item-group-disabled-text-color;
			}
		}

		// Active class on item itself, not parent
		&.active,
		&.active:hover,
		&.active:focus {
			z-index: 2; // Place active items above their siblings for proper border styling
			color: $item-group-active-color;
			background-color: $item-group-active-bg;
			border-color: $item-group-active-border;

			// Force color to inherit for custom content
			.list-group-item-heading,
			.list-group-item-heading > small,
			.list-group-item-heading > .small {
				color: inherit;
			}
			.list-group-item-text {
				color: $item-group-active-text-color;
			}
		}
	}

	// situation
	// -- good
	@include item-variant(good, $theme-good, $item-group-good-bg, $item-group-good-border);
	// -- info
	@include item-variant(info, $theme-info, $item-group-info-bg, $item-group-info-border);
	// -- warning
	@include item-variant(warning, $theme-warning, $item-group-warning-bg, $item-group-warning-border);
	// -- danger
	@include item-variant(danger, $theme-danger, $item-group-danger-bg, $item-group-danger-border);
	// -- link
	@include item-variant(link, $theme-link, $item-group-link-bg, $item-group-link-border);
	// -- special
	@include item-variant(special, $theme-special, $item-group-special-bg, $item-group-special-border);
}